// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SoutwestWater.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ProcessA1ProcessA1Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ProcessA1.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ProcessA1 Process A1", "sets out the operational arrangements where the Retailer wishes to make enquiries" +
                    " of the Wholesaler \r\nas to the provision of Water or Sewerage services for a pro" +
                    "posed development or premises.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "ProcessA1 Process A1")))
            {
                SoutwestWater.Features.ProcessA1ProcessA1Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("I can create an instance of the Process A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProcessA1 Process A1")]
        public virtual void ICanCreateAnInstanceOfTheProcessA1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can create an instance of the Process A1", ((string[])(null)));
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given("I am logged in as a SWWBS user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("I choose the \'Start Process\' link in the left hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And("I select create a new instance of process \'A01 Pre application enquiries\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "RetailerName",
                        "RetailerID",
                        "RetailersOwnReference",
                        "ContactName",
                        "ContactNumber",
                        "ContactEmail"});
            table1.AddRow(new string[] {
                        "SWWBS",
                        "ret000000001",
                        "retailerOwnRef",
                        "contactName",
                        "071825728282",
                        "colinmontgomery@swwbs.co.uk"});
#line 9
 testRunner.And("In the Retailer Details section I add the values", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "TypeOfDevelopement",
                        "OtherType",
                        "NumberOfCommercialUnits",
                        "NumberOfIndustrialUnits",
                        "SiteArea",
                        "StartDate",
                        "PreviousWholesaleRef",
                        "SiteName",
                        "SiteAddress",
                        "OrdSurveyRef",
                        "Location",
                        "PostcodeOut",
                        "DevName",
                        "SiteContactName",
                        "ContactNumber",
                        "ContactEmail"});
            table2.AddRow(new string[] {
                        "Industrial",
                        "",
                        "1",
                        "2",
                        "5",
                        "20/10/2016",
                        "previous reference",
                        "build Site",
                        "10 the road",
                        "1234567890",
                        "Cornwall",
                        "TR",
                        "developer",
                        "site contact",
                        "01326272390",
                        "contact@email.com"});
#line 12
 testRunner.And("In the Developement Details section I add the values", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "LocalAuthority",
                        "InTheCurrentLocalPlan",
                        "OutlinePlanning",
                        "DetailedPlanning",
                        "DetailedPlanningDate",
                        "PlanningReferenceNumber"});
            table3.AddRow(new string[] {
                        "East Devon",
                        "Yes",
                        "Yes",
                        "Yes",
                        "20/10/2016",
                        "90001"});
#line 15
 testRunner.And("In the Planning Information section I add the values", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "LandType",
                        "PreviousUseOfSite",
                        "DateLastOccupied"});
            table4.AddRow(new string[] {
                        "Greenfield",
                        "domestic",
                        "10/01/2016"});
#line 18
 testRunner.And("In the Site Servicing Details section I add the values", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "LowestGroundLevel",
                        "LowestRoadLevel",
                        "LowesterFloorLevel",
                        "QuoteForInvestigation"});
            table5.AddRow(new string[] {
                        "1",
                        "2",
                        "2",
                        "Yes"});
#line 21
 testRunner.And("In the Development Levels section I add the values", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "PreDevPeak",
                        "PreDevAverage",
                        "PostDevPeak",
                        "PostDevAverage",
                        "HighestWaterFitting"});
            table6.AddRow(new string[] {
                        "200",
                        "150",
                        "250",
                        "225",
                        "3"});
#line 24
 testRunner.And("In the Water Details section I add the details", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "PreDevWasteWaterDesign",
                        "PreCombinedPartCombinedQuantity",
                        "PreDevPeakDischarge",
                        "PreDevAverageDischarge",
                        "PostDevWasteWaterDesign",
                        "PostCombinedPartCombinedQuantity",
                        "PostDevPeakDischarge",
                        "PostDevAverageDischarge"});
            table7.AddRow(new string[] {
                        "Totally separate Foul Sewage and Surface Water",
                        "",
                        "200",
                        "100",
                        "Combined",
                        "200",
                        "300",
                        "267"});
#line 27
 testRunner.And("In the Sewerage Details section I add the details", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "PreDevSurfaceWaterDischarge",
                        "CurrentSWDischarge",
                        "DirectToWaterCourse",
                        "RainWater",
                        "Other",
                        "PostDevPreAttSW",
                        "PostDevAttSW",
                        "ProposedDischargeSW",
                        "SelectedDirect",
                        "SelectedRainWater",
                        "RelevantInfo",
                        "OOther",
                        "Plans"});
            table8.AddRow(new string[] {
                        "100",
                        "All",
                        "",
                        "",
                        "",
                        "200",
                        "300",
                        "Soak-away",
                        "",
                        "",
                        "",
                        "",
                        "processa1.txt"});
#line 30
 testRunner.And("In the Surface Water Drainage section I add the details", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "SudMeasures",
                        "Other"});
            table9.AddRow(new string[] {
                        "Underground storage",
                        ""});
#line 33
 testRunner.And("In the Surface Water Design section I add the details", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "TradeEffluentDischarge",
                        "Description",
                        "ProposedDailyVolume",
                        "ProposedDailyRate",
                        "PeriodOfDischarge",
                        "Treatment"});
            table10.AddRow(new string[] {
                        "Yes",
                        "trade effluent description",
                        "200000",
                        "200",
                        "10",
                        "chemical"});
#line 36
 testRunner.And("In the Trade Effluent section I add the details", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "SpecialRequirementDetails"});
            table11.AddRow(new string[] {
                        "special requirements for the application"});
#line 39
 testRunner.And("In the Special Requirements sections I enter", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "LocationPlan",
                        "Drawings",
                        "Calculations",
                        "SupportingDocs",
                        "Signature",
                        "Date",
                        "FullName",
                        "RoleInTheCompany"});
            table12.AddRow(new string[] {
                        "locationPlan",
                        "drawings",
                        "calculations",
                        "supportingDocs",
                        "",
                        "now",
                        "",
                        "tester"});
#line 42
 testRunner.And("In the Process A Declaration section I enter", ((string)(null)), table12, "And ");
#line 45
 testRunner.When("I click the \'Save & Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.Then("\'Your data was successfully submitted.\' message is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 47
 testRunner.And("I choose the \'Processes\' link in the left hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And("I select \'A. New Connections\' and sub process \'A01 Pre-Application enquiry in rel" +
                    "ation to a new connection or connections\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("the submitted process can be seen in the processes I started list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Retailer Name and Retailer Id are prepopulated")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProcessA1 Process A1")]
        public virtual void RetailerNameAndRetailerIdArePrepopulated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Retailer Name and Retailer Id are prepopulated", ((string[])(null)));
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
 testRunner.Given("I am logged in as a SWWBS user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
 testRunner.And("I choose the \'Start Process\' link in the left hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.When("I select create a new instance of process \'A01 Pre application enquiries\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.Then("the retailer name field and retailer id field are not empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("A wholesaler can reject a A1 process from a retailer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProcessA1 Process A1")]
        public virtual void AWholesalerCanRejectAA1ProcessFromARetailer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A wholesaler can reject a A1 process from a retailer", ((string[])(null)));
#line 57
this.ScenarioSetup(scenarioInfo);
#line 58
    testRunner.Given("I am logged in as a SWWBS user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
 testRunner.And("I choose the \'Start Process\' link in the left hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I select create a new instance of process \'A01 Pre application enquiries\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("I have added valid data to all sections of the Process A1 form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
    testRunner.And("I click the \'Save & Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And("\'Your data was successfully submitted.\' message is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.And("I log in as a wholesaler", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.And("I choose the \'Processes\' link in the left hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.And("I select \'A. New Connections\' and sub process \'A01 Pre-Application enquiry in rel" +
                    "ation to a new connection or connections\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.And("I open the process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And("I expand the left hand column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("I click on the WSD link to progress the process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.And("As a WSD user I reject the process and add the reason \'unknown contact is the rea" +
                    "son\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.When("As a WSD I click the \'Save & Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
 testRunner.Then("An Update Service Request item is created informing the retailer group that the p" +
                    "rocess has been rejected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 73
 testRunner.And("the rejection reason is \'unknown contact is the reason\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AWholesalerCanRejectAA1ProcessFromARetailerUsingAllReasonsWhereTheProcessCanContinue(string rejectType, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A wholesaler can reject a A1 process from a retailer using all reasons where the " +
                    "process can continue", exampleTags);
#line 75
this.ScenarioSetup(scenarioInfo);
#line 76
 testRunner.Given("a retailer has created a Process A1 request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
 testRunner.When(string.Format("a wholesaler rejects the process instance with reason \'unknown contact is the rea" +
                        "son\' and \'{0}\'", rejectType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.And("As a WSD I click the \'Save & Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.Then("An Update Service Request item is created informing the retailer group that the p" +
                    "rocess has been rejected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 80
 testRunner.And("the rejection reason is \'unknown contact is the reason\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("A wholesaler can reject a A1 process from a retailer using all reasons where the " +
            "process can continue: Incomplete form (Reject)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProcessA1 Process A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Incomplete form (Reject)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:rejectType", "Incomplete form (Reject)")]
        public virtual void AWholesalerCanRejectAA1ProcessFromARetailerUsingAllReasonsWhereTheProcessCanContinue_IncompleteFormReject()
        {
            this.AWholesalerCanRejectAA1ProcessFromARetailerUsingAllReasonsWhereTheProcessCanContinue("Incomplete form (Reject)", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("A wholesaler can reject a A1 process from a retailer using all reasons where the " +
            "process can continue: Further clarification required (Reject)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProcessA1 Process A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Further clarification required (Reject)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:rejectType", "Further clarification required (Reject)")]
        public virtual void AWholesalerCanRejectAA1ProcessFromARetailerUsingAllReasonsWhereTheProcessCanContinue_FurtherClarificationRequiredReject()
        {
            this.AWholesalerCanRejectAA1ProcessFromARetailerUsingAllReasonsWhereTheProcessCanContinue("Further clarification required (Reject)", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("A wholesaler can reject a A1 process from a retailer using all reasons where the " +
            "process can continue: Other - refer to explanatory text (Reject)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProcessA1 Process A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Other - refer to explanatory text (Reject)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:rejectType", "Other - refer to explanatory text (Reject)")]
        public virtual void AWholesalerCanRejectAA1ProcessFromARetailerUsingAllReasonsWhereTheProcessCanContinue_Other_ReferToExplanatoryTextReject()
        {
            this.AWholesalerCanRejectAA1ProcessFromARetailerUsingAllReasonsWhereTheProcessCanContinue("Other - refer to explanatory text (Reject)", ((string[])(null)));
#line hidden
        }
        
        public virtual void AWholesalerCanRejectAA1ProcessFromARetailerUsingAllReasonsWhereTheProcessEnds(string rejectType, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A wholesaler can reject a A1 process from a retailer using all reasons where the " +
                    "process ends", exampleTags);
#line 88
this.ScenarioSetup(scenarioInfo);
#line 89
 testRunner.Given("a retailer has created a Process A1 request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 90
 testRunner.When(string.Format("a wholesaler rejects the process instance with reason \'unknown contact is the rea" +
                        "son\' and \'{0}\'", rejectType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
 testRunner.And("As a WSD I click the \'Save & Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.Then("An Update Service Request item is created informing the retailer group that the p" +
                    "rocess has been closed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("A wholesaler can reject a A1 process from a retailer using all reasons where the " +
            "process ends: Incorrect form used (Reject)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProcessA1 Process A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Incorrect form used (Reject)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:rejectType", "Incorrect form used (Reject)")]
        public virtual void AWholesalerCanRejectAA1ProcessFromARetailerUsingAllReasonsWhereTheProcessEnds_IncorrectFormUsedReject()
        {
            this.AWholesalerCanRejectAA1ProcessFromARetailerUsingAllReasonsWhereTheProcessEnds("Incorrect form used (Reject)", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("A wholesaler can reject a A1 process from a retailer using all reasons where the " +
            "process ends: Wrong wholesaler (Reject)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProcessA1 Process A1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Wrong wholesaler (Reject)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:rejectType", "Wrong wholesaler (Reject)")]
        public virtual void AWholesalerCanRejectAA1ProcessFromARetailerUsingAllReasonsWhereTheProcessEnds_WrongWholesalerReject()
        {
            this.AWholesalerCanRejectAA1ProcessFromARetailerUsingAllReasonsWhereTheProcessEnds("Wrong wholesaler (Reject)", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Developer Services deem sufficient capacity to service the Process A1 request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProcessA1 Process A1")]
        public virtual void DeveloperServicesDeemSufficientCapacityToServiceTheProcessA1Request()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Developer Services deem sufficient capacity to service the Process A1 request", ((string[])(null)));
#line 99
this.ScenarioSetup(scenarioInfo);
#line 100
 testRunner.Given("a retailer has created a Process A1 request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 101
 testRunner.And("a wholesaler accepts the process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.And("As a WSD I click the \'Save & Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.And("i log in as a Developer Services user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.And("I choose the \'Processes\' link in the left hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.And("I select \'A. New Connections\' and sub process \'A01 Pre-Application enquiry in rel" +
                    "ation to a new connection or connections\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.And("I open the process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
 testRunner.And("I expand the left hand column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.And("I Click the Make initial Response user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.When("i select \'Sufficient capacity\' as an initial response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
 testRunner.And("I click the \'Save & Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.And("I am logged in as a SWWBS user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.And("I choose the \'Processes\' link in the left hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
 testRunner.And("I select \'A. New Connections\' and sub process \'A01 Pre-Application enquiry in rel" +
                    "ation to a new connection or connections\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
 testRunner.And("I open the process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
 testRunner.And("I expand the left hand column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And("I click on the notify sufficient capacity node", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "to",
                        "from",
                        "subject",
                        "message"});
            table13.AddRow(new string[] {
                        "Gary GIBBONS",
                        "Sequence New Connections User 2",
                        "Notification: Service Request Complete",
                        "Your Service Request"});
#line 117
 testRunner.Then("the retailer will receive notification of completion", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Developer Services deem that a DIA pre development report is required")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProcessA1 Process A1")]
        public virtual void DeveloperServicesDeemThatADIAPreDevelopmentReportIsRequired()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Developer Services deem that a DIA pre development report is required", ((string[])(null)));
#line 121
this.ScenarioSetup(scenarioInfo);
#line 122
   testRunner.Given("a retailer has created a Process A1 request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 123
   testRunner.When("the process is accepted and developer services ask for \'DIA/Pre-development repor" +
                    "t required\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
   testRunner.And("the retailer opens the process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
   testRunner.Then("the text \'DIA/Pre-development report required\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Developer Services deem that further information is required")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProcessA1 Process A1")]
        public virtual void DeveloperServicesDeemThatFurtherInformationIsRequired()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Developer Services deem that further information is required", ((string[])(null)));
#line 127
this.ScenarioSetup(scenarioInfo);
#line 128
   testRunner.Given("a retailer has created a Process A1 request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 129
   testRunner.When("the process is accepted and developer services ask for \'Further information requi" +
                    "red\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
   testRunner.And("the retailer opens the process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
   testRunner.Then("the text \'Further information required\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("A retailer re-submits form A1 and developer services deem it materially complete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ProcessA1 Process A1")]
        public virtual void ARetailerRe_SubmitsFormA1AndDeveloperServicesDeemItMateriallyComplete()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A retailer re-submits form A1 and developer services deem it materially complete", ((string[])(null)));
#line 133
this.ScenarioSetup(scenarioInfo);
#line 134
   testRunner.Given("a retailer has created a Process A1 request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 135
   testRunner.And("the process is accepted and developer services ask for \'DIA/Pre-development repor" +
                    "t required\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
   testRunner.And("the retailer opens the process", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
   testRunner.When("the retailer resubmits the form A1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
   testRunner.And("developer services deem it materially complete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
   testRunner.Then("the retailer must review proposed DIA/Pre-development details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
